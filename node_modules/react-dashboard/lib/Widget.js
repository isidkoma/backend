/**
 * Created by g.kosharov on 12.3.2016 ï¿½..
 */
'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _lodashLangIsObject = require('lodash/lang/isObject');

var _lodashLangIsObject2 = _interopRequireDefault(_lodashLangIsObject);

var Widget = (function (_Component) {
    _inherits(Widget, _Component);

    function Widget(props) {
        _classCallCheck(this, Widget);

        _get(Object.getPrototypeOf(Widget.prototype), 'constructor', this).call(this, props);
    }

    _createClass(Widget, [{
        key: 'buildChildren',
        value: function buildChildren() {
            if (this.props.components) {

                var children = this.props.components;

                var jsx = [];
                var _iteratorNormalCompletion = true;
                var _didIteratorError = false;
                var _iteratorError = undefined;

                try {
                    for (var _iterator = children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                        var child = _step.value;

                        if (_react2['default'].isValidElement(child)) {
                            jsx.push(child);
                        } else if ((0, _lodashLangIsObject2['default'])(child) && this.props.createElement) {
                            jsx.push(this.props.createElement(child, { widgetId: this.props.id }));
                        } else {
                            console.warn("Unable to build children from the provided components option: " + children);
                        }
                    }
                } catch (err) {
                    _didIteratorError = true;
                    _iteratorError = err;
                } finally {
                    try {
                        if (!_iteratorNormalCompletion && _iterator['return']) {
                            _iterator['return']();
                        }
                    } finally {
                        if (_didIteratorError) {
                            throw _iteratorError;
                        }
                    }
                }

                return jsx;
            }
            return null;
        }
    }, {
        key: 'render',
        value: function render() {
            var children = null;
            var widgetClassName = this.props.className ? this.props.className : "widget";
            if (this.props.children) {
                children = this.props.children;
            } else {
                try {
                    children = this.props.buildChildren ? this.props.buildChildren(this.props.components) : this.buildChildren();
                } catch (exception) {
                    console.warn("Widget children build failure with error: " + exception.message);
                    throw exception;
                }
            }
            if (children) {
                return _react2['default'].createElement(
                    'div',
                    { className: widgetClassName },
                    children
                );
            }
            return _react2['default'].createElement(
                'div',
                null,
                _react2['default'].createElement(
                    'h2',
                    null,
                    'No content available!'
                )
            );
        }
    }]);

    return Widget;
})(_react.Component);

exports['default'] = Widget;
module.exports = exports['default'];