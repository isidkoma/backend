/**
 * Created by g.kosharov on 12.3.2016 ï¿½..
 */
'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _lodashObjectMerge = require('lodash/object/merge');

var _lodashObjectMerge2 = _interopRequireDefault(_lodashObjectMerge);

var _lodashCollectionForEach = require('lodash/collection/forEach');

var _lodashCollectionForEach2 = _interopRequireDefault(_lodashCollectionForEach);

var _Widget = require('./Widget');

var _Widget2 = _interopRequireDefault(_Widget);

var _Layout = require('./Layout');

var _Layout2 = _interopRequireDefault(_Layout);

/**
 *
 * @exports Dashboard
 * @class Dashboard
 * @constructor
 * @augments React.Component
 * @classdesc
 */

var Dashboard = (function (_Component) {
    _inherits(Dashboard, _Component);

    function Dashboard(props) {
        _classCallCheck(this, Dashboard);

        _get(Object.getPrototypeOf(Dashboard.prototype), 'constructor', this).call(this, props);
    }

    _createClass(Dashboard, [{
        key: 'onActivate',
        value: function onActivate(widget) {
            console.log(widget + " activated!");
        }
    }, {
        key: 'onDeactivate',
        value: function onDeactivate(widget) {
            console.log(widget + " deactivated!");
        }

        /**
         * @public
         * @desc render the widgets. Each widget may provide its class and other options
         */
    }, {
        key: 'buildWidgets',
        value: function buildWidgets() {
            var _this = this;

            var widgets = {};
            if (this.props.widgets) {
                (0, _lodashCollectionForEach2['default'])(this.props.widgets, function (widget) {
                    var WidgetClass = widget['class'] || _this.props.widgetClass || _Widget2['default'];
                    var options = widget || {};
                    var onActivate = options.onActivate || _this.onActivate;
                    var onDeactivate = options.onDeactivate || _this.onDeactivate;
                    var props = (0, _lodashObjectMerge2['default'])({}, options, { onActivate: onActivate, onDeactivate: onDeactivate });
                    if (widgets[widget.region]) {
                        widgets[widget.region] = _react2['default'].createElement(
                            'div',
                            null,
                            widgets[widget.region],
                            _react2['default'].createElement(WidgetClass, props)
                        );
                    } else {
                        widgets[widget.region] = _react2['default'].createElement(WidgetClass, props);
                    }
                });
            }
            return widgets;
        }
    }, {
        key: 'render',
        value: function render() {
            var widgets = [];
            var Layout = this.props.layout ? this.props.layout : _Layout2['default'];
            var className = this.props.className ? this.props.className : "dashboard";
            try {
                if (this.props.buildWidgets) {

                    widgets = this.props.buildWidgets();
                } else {

                    widgets = this.buildWidgets();
                }
            } catch (e) {
                console.warn("Building widgets failed with " + e.message);
            }

            if (widgets) {
                return _react2['default'].createElement(Layout, { className: className, regions: widgets });
            }
            return _react2['default'].createElement(
                'h3',
                { className: 'error' },
                'No widgets built!'
            );
        }
    }]);

    return Dashboard;
})(_react.Component);

exports['default'] = Dashboard;
module.exports = exports['default'];